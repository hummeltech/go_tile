---
version: "3.8"

services:
  go_tile:
    build:
      context: ..
      dockerfile: docker/Dockerfile.go_tile
    depends_on:
      renderd:
        condition: service_healthy
    environment:
      MAP_NAME: default
      METATILE_DIR: /data/tiles
      RENDERD_SOCKET: renderd:7654
    ports:
      - 8080:8080
    volumes:
      - osm-tiles:/data/tiles:ro

  renderd:
    build:
      args:
        mod_tile_ref: CMakeGenerateConfigsAndDirectories
        mod_tile_repo: https://github.com/hummeltech/mod_tile.git
      dockerfile: Dockerfile.renderd
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DOWNLOAD_PBF: https://download.geofabrik.de/europe/germany/hamburg-latest.osm.pbf
      DOWNLOAD_POLY: https://download.geofabrik.de/europe/germany/hamburg.poly
      G_MESSAGES_DEBUG: ${G_MESSAGES_DEBUG:-info}
      PGHOST: postgres
      PGUSER: gis
    volumes:
      - osm-data:/data:rw
      - osm-tiles:/data/tiles:rw

  postgres:
    environment:
      PGDATA: /data/database
      POSTGRES_DB: gis
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: gis
    healthcheck:
      start_period: 5m
      test: ["CMD", "pg_isready", "--username", "gis"]
    image: postgis/postgis:15-3.3-alpine
    volumes:
      - ./postgres-20_hstore.sh:/docker-entrypoint-initdb.d/20_hstore.sh
      - ./postgres-30_tuning.sh:/docker-entrypoint-initdb.d/30_tuning.sh
      - osm-database:/data/database

volumes:
  osm-data:
    driver: local
  osm-database:
    driver: local
  osm-tiles:
    driver: local
